//////////////////////////////////////////////////////////
// Структура СИСТЕМЫ УПРАВЛЕНИЯ БАЗАМИ ДАННЫХ (СУБД/DBMS)
//////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
// 
//  NOTE: 
//
//  Все объекты данных (СУБД, базы, таблицы, поля) имеют имена,
//  которые используются для доступа к оъектам и для размещения данных на диске.
//
//  Такие объекты данных, как таблицы и поля имеют дополнительные атрибуты:
//
//    Атрибуты таблиц данных (DATA_TABLE attributes):
//      START_SIZE(???) - Стартовый/зарезервированный размер таблицы данных.
//                        Задается кол-вом элементов.
//                        По умолчанию резервируется место для 500,000 элементов. 
//
//      GROW_EVEN  - Способ увеличения размера - добавлять_столько_же
//      GROW_UP    - Способ увеличения размера - добавлять_в_2_раза_больше
//      GROW_DOWN  - Способ увеличения размера - добавлять_в_2_раза_меньше
//                   По умолчанию табица увелмчивается на величину START_SIZE.  
//
//    Атрибуты табличных полей (DATA_FIELD attributes):
//      INT32    - Тип данных поля - 32-х_битовое_целое 
//      WORD     - Тип данных поля - 32-х_битовое_целое 
//      BYTE_10  - Тип данных поля - 10-и_байтовая_структура
//      STRING   - Тип данных поля - строка std::string
//
//      IS_UNIC  - Значения в указанном поле будут уникальными.
//                 Методы поиска будут возвращать не более одной записи,
//                 а метод добавления вернет S_FALSE в случае, когда
//                 заданное значение поля в таблице уже есть.
//                 Экономия памяти за счет отсутствия ссылок "NEXT".
//                 (Пример использования: индексы и порядковые номера)   
//
//      NO_FIND  - Нет поиска по данному полю. Экономия памяти за счет
//                 отсутствия ссылок "NEXT" и работы с одинаковыми значениями.
//                 (Пример использования: словарные статьи и предложения,
//                  связанные со многими ключами)   
//      
//      IS_DATA  - Данные. Нет поиска по данному полю.
//                 Экономия памяти за счет отсутствия ссылок "NEXT".
//                 В случае повторяющихся значений - экономии памяти НЕТ(!). 
//                 (Пример использования: не повторяющиеся, не ключевые данные)   
//
///////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////
// СУБД "SS"

#DBMS_NAME = ""  

   
   #DATA_BASE_NAME = "DBMS" 

      #DATA_TABLE_NAME = "NewFormRussian" : START_SIZE(1000000), GROW_EVEN, SAVE_EVERY(20000)
      
          #DATA_FIELD_INFO = "IDSource"   : INT32 // 
          #DATA_FIELD_INFO = "Source"     : WSTRING// 
          #DATA_FIELD_INFO = "SourceLower": WSTRING// 
          #DATA_FIELD_INFO = "IDType"     : INT32 // 

      #END_DATA_TABLE 

      #DATA_TABLE_NAME = "NewFormEnglish" : START_SIZE(1000000), GROW_EVEN, SAVE_EVERY(20000)
      
          #DATA_FIELD_INFO = "IDSource"   : INT32 // 
          #DATA_FIELD_INFO = "Source"     : WSTRING// 
          #DATA_FIELD_INFO = "SourceLower": WSTRING// 
          #DATA_FIELD_INFO = "IDType"     : INT32 // 

      #END_DATA_TABLE  
   #END_DATA_BASE


#END_DBMS

