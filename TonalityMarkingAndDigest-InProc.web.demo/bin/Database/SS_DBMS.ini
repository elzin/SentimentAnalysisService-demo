//////////////////////////////////////////////////////////
// Структура СИСТЕМЫ УПРАВЛЕНИЯ БАЗАМИ ДАННЫХ (СУБД/DBMS)
//////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
// 
//  NOTE: 
//
//  Все объекты данных (СУБД, базы, таблицы, поля) имеют имена,
//  которые используются для доступа к оъектам и для размещения данных на диске.
//
//  Такие объекты данных, как таблицы и поля имеют дополнительные атрибуты:
//
//    Атрибуты таблиц данных (DATA_TABLE attributes):
//      START_SIZE(???) - Стартовый/зарезервированный размер таблицы данных.
//                        Задается кол-вом элементов.
//                        По умолчанию резервируется место для 500,000 элементов. 
//
//      SAVE_EVERY(NNN) - Инструкция сохранять копию таблицы после
//                        добавления/изменения каждых NNN записей. 
//
//      GROW_EVEN       - Способ увеличения размера - добавлять_столько_же
//      GROW_UP         - Способ увеличения размера - добавлять_в_2_раза_больше
//      GROW_DOWN       - Способ увеличения размера - добавлять_в_2_раза_меньше
//                        По умолчанию табица увелмчивается на величину START_SIZE.  
//
//    Типы табличных полей (DATA_FIELD types):
//
//      INT32    - Тип данных поля - 32-х_битовое_целое 
//      WORD     - Тип данных поля - 32-х_битовое_целое 
//      BYTE_10  - Тип данных поля - 10-и_байтовая_структура
//      STRING   - Тип данных поля - строка std::string
//      WSTRING  - Тип данных поля - строка std::wstring
//
//    Модификаторы табличных полей (DATA_FIELD modificators):
//
//      IS_UNIC     - Значения в указанном поле будут уникальными.
//                    Методы поиска будут возвращать не более одной записи,
//                    а метод добавления вернет S_FALSE в случае, когда
//                    заданное значение поля в таблице уже есть.
//                    Экономия памяти за счет отсутствия ссылок "NEXT".
//                    (Пример использования: индексы и порядковые номера)   
//                
//      NO_FIND     - Нет поиска по данному полю. Экономия памяти за счет
//                    отсутствия ссылок "NEXT" и работы с одинаковыми значениями.
//                    (Пример использования: словарные статьи и предложения,
//                     связанные со многими ключами)   
//                
//      IS_DATA     - Данные. Нет поиска по данному полю.
//                    Экономия памяти за счет отсутствия ссылок "NEXT".
//                    В случае повторяющихся значений - экономии памяти НЕТ(!). 
//                    (Пример использования: не повторяющиеся, не ключевые данные) 
//                
//      MOD_INDEXED - Дополнительный, к вышеперечмсленным, модификатор. 
//                    Позволяет осуществлять поиск в заданном интервале значений.
//                    Создает индексный файл. 
//
//
///////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////
// СУБД "SS"

#DBMS_NAME = ""  

   ///////////////////////////////
   // Морфологическая база данных
   
   #DATA_BASE_NAME = "MorphoEnglish" 

      /////////////////////////////////////////
      // Таблицы относящиеся к морфологической базе
      // Таблица окончаний
      #DATA_TABLE_NAME = "Ending" : START_SIZE(10000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "ID"              : INT32              // Индекс окончания
          #DATA_FIELD_INFO = "PartOfWord"      : WSTRING - NO_FIND  // Литеральное представление окончания
          
      #END_DATA_TABLE

      /////////////////////////////////////////
      // Таблица опредиляющая слово по IDType
      #DATA_TABLE_NAME = "NewWordsDeduction" : START_SIZE(10000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "ID"              : INT32              // IDType
          #DATA_FIELD_INFO = "Word"      : WSTRING - NO_FIND  // Литеральное представление окончания
          
      #END_DATA_TABLE


      // Таблица типов мофообразования      
      #DATA_TABLE_NAME = "MorphoTypes" : START_SIZE(100000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDForm"          : INT32             // Номер окончания в типе
          #DATA_FIELD_INFO = "IDType"          : INT32             // Номер типа морфообразования
          #DATA_FIELD_INFO = "IDEnding"        : INT32             // Индекс окончания 
          #DATA_FIELD_INFO = "PartOfSpeech"    : INT32             // морфологическая информация о слове
          
      #END_DATA_TABLE

      // Таблица соответствия типа морфообразования и основной морфологической информации
      #DATA_TABLE_NAME = "MorphoTypeToMorphoInfo" : START_SIZE(10000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDType"          : INT32             // Номер типа морфообразования
          #DATA_FIELD_INFO = "MorphoInfo"      : INT32             // морфологическая информация о слове
          
      #END_DATA_TABLE


      // Таблица основ имен нарицательных
      #DATA_TABLE_NAME = "NominalSourceForm" : START_SIZE(200000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "ID"             : INT32              // Индекс основы
          #DATA_FIELD_INFO = "PartOfWord"     : WSTRING - NO_FIND  // Литеральное представление основы
          
      #END_DATA_TABLE

      // Таблица соответствия индекса основы и типа морфообразования для имен нарицательных
      #DATA_TABLE_NAME = "NominalSourceToMorpho" : START_SIZE(200000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDSource"    : INT32   // Индекс основы
          #DATA_FIELD_INFO = "IDType"      : INT32   // Номер типа морфообразования
          
      #END_DATA_TABLE

      // Таблица основ имен собственных
      #DATA_TABLE_NAME = "ProperSourceForm" : START_SIZE(200000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "ID"          : INT32               // Индекс основы
          #DATA_FIELD_INFO = "PartOfWord"  : WSTRING - NO_FIND   // Литеральное представление основы
          
      #END_DATA_TABLE

      // Таблица соответствия индекса основы и типа морфообразования для имен собственных
      #DATA_TABLE_NAME = "ProperSourceToMorpho" : START_SIZE(200000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDSource"    : INT32             // Индекс основы
          #DATA_FIELD_INFO = "IDType"      : INT32             // Номер типа морфообразования
          
      #END_DATA_TABLE


      /////////////////////////////////////////
      // Таблица синонимов и однокоренных слов
      
      #DATA_TABLE_NAME = "NominalSynonims" : START_SIZE(30000), GROW_DOWN  // START_SIZE(36000), GROW_DOWN 
      
          #DATA_FIELD_INFO = "IDSource"       : INT32             // Основы
          #DATA_FIELD_INFO = "IDSynonins"     : INT32  - IS_DATA  // Синонимы и однокоренные слова
          
      #END_DATA_TABLE

      #DATA_TABLE_NAME = "OneRoot" : START_SIZE(18000), GROW_DOWN  // START_SIZE(36000), GROW_DOWN 
      
          #DATA_FIELD_INFO = "IDSource"       : INT32             // Основы
          #DATA_FIELD_INFO = "IDOneRoot"      : INT32  - IS_DATA  // Синонимы и однокоренные слова
          
      #END_DATA_TABLE


     #DATA_TABLE_NAME = "NominalAlternativeSource" : START_SIZE(50000), GROW_DOWN  // START_SIZE(36000), GROW_DOWN 
      
          #DATA_FIELD_INFO = "IDSource"                : INT32             // Основы
          #DATA_FIELD_INFO = "IDAlternativeSource"     : INT32  - IS_DATA  // Синонимы и однокоренные слова
          
      #END_DATA_TABLE

   #END_DATA_BASE  



   ///////////////////////////////
   // Морфологическая база данных
   
   #DATA_BASE_NAME = "MorphoRussian" 

      /////////////////////////////////////////
      // Таблицы относящиеся к морфологической базе
      // Таблица окончаний
      #DATA_TABLE_NAME = "Ending" : START_SIZE(10000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "ID"             : INT32              // Индекс окончания
          #DATA_FIELD_INFO = "PartOfWord"     : WSTRING - NO_FIND  // Литеральное представление окончания
          
      #END_DATA_TABLE

      // Таблица типов мофообразования      
      #DATA_TABLE_NAME = "MorphoTypes" : START_SIZE(100000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDForm"         : INT32    // Номер окончания в типе
          #DATA_FIELD_INFO = "IDType"         : INT32    // Номер типа морфообразования
          #DATA_FIELD_INFO = "IDEnding"       : INT32    // Индекс окончания 
          #DATA_FIELD_INFO = "PartOfSpeech"   : INT32    // морфологическая информация о слове
          
      #END_DATA_TABLE

      // Таблица соответствия типа морфообразования и основной морфологической информации
      #DATA_TABLE_NAME = "MorphoTypeToMorphoInfo" : START_SIZE(10000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDType"         : INT32   // Номер типа морфообразования
          #DATA_FIELD_INFO = "MorphoInfo"     : INT32   // морфологическая информация о слове
          
      #END_DATA_TABLE


      // Таблица основ имен нарицательных
      #DATA_TABLE_NAME = "NominalSourceForm" : START_SIZE(200000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "ID"             : INT32              // Индекс основы
          #DATA_FIELD_INFO = "PartOfWord"     : WSTRING - NO_FIND  // Литеральное представление основы
          
      #END_DATA_TABLE

      // Таблица соответствия индекса основы и типа морфообразования для имен нарицательных
      #DATA_TABLE_NAME = "NominalSourceToMorpho" : START_SIZE(200000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDSource"    : INT32             // Индекс основы
          #DATA_FIELD_INFO = "IDType"      : INT32             // Номер типа морфообразования
          
      #END_DATA_TABLE

      // Таблица основ имен собственных
      #DATA_TABLE_NAME = "ProperSourceForm" : START_SIZE(200000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "ID"          : INT32              // Индекс основы
          #DATA_FIELD_INFO = "PartOfWord"  : WSTRING - NO_FIND  // Литеральное представление основы
          
      #END_DATA_TABLE

      // Таблица соответствия индекса основы и типа морфообразования для имен собственных
      #DATA_TABLE_NAME = "ProperSourceToMorpho" : START_SIZE(200000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDSource"    : INT32             // Индекс основы
          #DATA_FIELD_INFO = "IDType"      : INT32             // Номер типа морфообразования
          
      #END_DATA_TABLE



 
      /////////////////////////////////////////
      // Таблица синонимов и однокоренных слов
    
      #DATA_TABLE_NAME = "NominalSynonims" : START_SIZE(50000), GROW_DOWN  // START_SIZE(36000), GROW_DOWN 
      
          #DATA_FIELD_INFO = "IDSource"    : INT32             // Основы
          #DATA_FIELD_INFO = "IDSynonins"  : INT32  - IS_DATA  // Синонимы и однокоренные слова
          
      #END_DATA_TABLE

      #DATA_TABLE_NAME = "OneRoot" : START_SIZE(100000), GROW_DOWN  // START_SIZE(36000), GROW_DOWN 
      
          #DATA_FIELD_INFO = "IDSource"      : INT32             // Основы
          #DATA_FIELD_INFO = "IDOneRoot"     : INT32  - IS_DATA  // Синонимы и однокоренные слова
          
      #END_DATA_TABLE


     #DATA_TABLE_NAME = "NominalAlternativeSource" : START_SIZE(50000), GROW_DOWN  // START_SIZE(36000), GROW_DOWN 
      
          #DATA_FIELD_INFO = "IDSource"              : INT32             // Основы
          #DATA_FIELD_INFO = "IDAlternativeSource"   : INT32  - IS_DATA  // Синонимы и однокоренные слова
          
      #END_DATA_TABLE

   #END_DATA_BASE



   ///////////////////////////////////
   // Семантико-комбинаторный словарь
   
   #DATA_BASE_NAME = "CoSeDiEnglish" 

      // Таблица комбинаций слов 
      #DATA_TABLE_NAME = "Combinatory" : START_SIZE(75000), GROW_DOWN

          #DATA_FIELD_INFO = "ID"                     : INT32              // Индекс комбинации
          #DATA_FIELD_INFO = "HashKey"                : INT32              // Hash-ключ комбинации
          #DATA_FIELD_INFO = "HashKey_2"              : INT32              // Hash-ключ комбинации в режиме 2
          #DATA_FIELD_INFO = "CombiType"              : INT32  - IS_DATA   // Номер буквы в комбинации
          #DATA_FIELD_INFO = "IDType"                 : INT32  - IS_DATA   // Тип морфообразования полученной комбинации

          #DATA_FIELD_INFO = "NumOfMembers"           : INT32  - IS_DATA   // Число членов комбинации
          #DATA_FIELD_INFO = "IDSource0"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm0"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource1"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm1"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource2"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm2"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource3"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm3"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource4"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm4"                : INT32  - IS_DATA   // Номер окончания в IDType

      #END_DATA_TABLE

      // Таблица комбинаций слов (дополнительная)
      #DATA_TABLE_NAME = "CombinatoryExtra" : START_SIZE(75000), GROW_DOWN

          #DATA_FIELD_INFO = "ID"                     : INT32              // Индекс комбинации
          #DATA_FIELD_INFO = "HashKey"                : INT32              // Hash-ключ комбинации
          #DATA_FIELD_INFO = "HashKey_2"              : INT32              // Hash-ключ комбинации в режиме 2
          #DATA_FIELD_INFO = "CombiType"              : INT32  - IS_DATA   // Номер буквы в комбинации
          #DATA_FIELD_INFO = "IDType"                 : INT32  - IS_DATA   // Тип морфообразования полученной комбинации

          #DATA_FIELD_INFO = "NumOfMembers"           : INT32  - IS_DATA   // Число членов комбинации
          #DATA_FIELD_INFO = "IDSource0"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm0"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource1"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm1"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource2"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm2"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource3"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm3"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource4"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm4"                : INT32  - IS_DATA   // Номер окончания в IDType

      #END_DATA_TABLE


      // Таблица комбинаторных синонимов 
      #DATA_TABLE_NAME = "CombiSynonyms" : START_SIZE(10000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDSource"           : INT32             // Индекс основы
          #DATA_FIELD_INFO = "DictionaryNumber"   : INT32 - NO_FIND   // Номер словаря
          #DATA_FIELD_INFO = "IDClass" 	    : INT32             // Индекс синонимического класса
          
      #END_DATA_TABLE

      // Таблица Дерева семантических классов      
      #DATA_TABLE_NAME = "SemanticIDSourceTree" : START_SIZE(18000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "DictionaryNumberParent"   : INT32 - NO_FIND   // Индекс словаря родителя
          #DATA_FIELD_INFO = "IDSourceParent"           : INT32             // Индекс основы родителя
          #DATA_FIELD_INFO = "DictionaryNumberChild"    : INT32 - NO_FIND   // Индекс словаря ребенка
          #DATA_FIELD_INFO = "IDSourceChild"            : INT32             // Индекс основы ребенка
          
      #END_DATA_TABLE

      // Таблица дерева семантических классов
      #DATA_TABLE_NAME = "SemanticClassesTree" : START_SIZE(18000), GROW_DOWN  

          #DATA_FIELD_INFO = "IDClass"     : INT32    // Индекс семантического класса
          #DATA_FIELD_INFO = "IDParent"    : INT32    // Индекс семантического класса, который является отцом текущего
          #DATA_FIELD_INFO = "Name"        : WSTRING  // Имя семантического класса
          #DATA_FIELD_INFO = "ShortName"   : WSTRING  // Короткое имя класса
          #DATA_FIELD_INFO = "Color"       : UINT32   // Цвет отображения
          
      #END_DATA_TABLE

      // Таблица связывающая основы слов и семантические классы
      #DATA_TABLE_NAME = "SemanticClassesWords" : START_SIZE(50000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDSource"           : INT32              // Индекс основы
          #DATA_FIELD_INFO = "IDClass"            : INT32              // Индекс семантического класса
          
      #END_DATA_TABLE

      // Таблица синонимов 
      #DATA_TABLE_NAME = "SemanticsSynonims" : START_SIZE(50000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDSource"           : INT32              // Индекс основы
          #DATA_FIELD_INFO = "DictionaryNumber"   : INT32  - NO_FIND   // Номер словаря
          #DATA_FIELD_INFO = "IDClass"            : INT32              // Индекс семантического класса
          
      #END_DATA_TABLE


      // Таблица семантики слов      
      #DATA_TABLE_NAME = "Semantics" : START_SIZE(70000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDSource"           : INT32              // Индекс основы
          #DATA_FIELD_INFO = "DictionaryNumber"   : INT32  - NO_FIND   // Номер словаря
          #DATA_FIELD_INFO = "IDClass"            : INT32              // Индекс семантического класса
          
      #END_DATA_TABLE

      // Таблица семантики слов (дополнительная)      
      #DATA_TABLE_NAME = "SemanticsExtra" : START_SIZE(50000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDSource"           : INT32              // Индекс основы
          #DATA_FIELD_INFO = "DictionaryNumber"   : INT32  - NO_FIND   // Номер словаря
          #DATA_FIELD_INFO = "IDClass"            : INT32              // Индекс семантического класса
          
      #END_DATA_TABLE
      
      // Таблица комбинаций слов      
      #DATA_TABLE_NAME = "Syntax" : START_SIZE(18000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "DictionaryNumber"   : INT32 - NO_FIND   // Номер словаря
          #DATA_FIELD_INFO = "IDSource"           : INT32             // Индекс основы, который включает индекс корня и суффикса - битовая структура
          #DATA_FIELD_INFO = "SyntaxInfo"         : INT32 - NO_FIND   // Синтаксическая информация
          
      #END_DATA_TABLE
 
   #END_DATA_BASE  



   ///////////////////////////////////
   // Семантико-комбинаторный словарь
   
   #DATA_BASE_NAME = "CoSeDiRussian" 

      // Таблица комбинаций слов 
      #DATA_TABLE_NAME = "Combinatory" : START_SIZE(75000), GROW_DOWN

          #DATA_FIELD_INFO = "ID"                     : INT32              // Индекс комбинации
          #DATA_FIELD_INFO = "HashKey"                : INT32              // Hash-ключ комбинации
          #DATA_FIELD_INFO = "HashKey_2"              : INT32              // Hash-ключ комбинации в режиме 2
          #DATA_FIELD_INFO = "CombiType"              : INT32  - IS_DATA   // Номер буквы в комбинации
          #DATA_FIELD_INFO = "IDType"                 : INT32  - IS_DATA   // Тип морфообразования полученной комбинации

          #DATA_FIELD_INFO = "NumOfMembers"           : INT32  - IS_DATA   // Число членов комбинации
          #DATA_FIELD_INFO = "IDSource0"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm0"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource1"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm1"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource2"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm2"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource3"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm3"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource4"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm4"                : INT32  - IS_DATA   // Номер окончания в IDType

      #END_DATA_TABLE

      // Таблица комбинаций слов (дополнительная)
      #DATA_TABLE_NAME = "CombinatoryExtra" : START_SIZE(75000), GROW_DOWN

          #DATA_FIELD_INFO = "ID"                     : INT32              // Индекс комбинации
          #DATA_FIELD_INFO = "HashKey"                : INT32              // Hash-ключ комбинации
          #DATA_FIELD_INFO = "HashKey_2"              : INT32              // Hash-ключ комбинации в режиме 2
          #DATA_FIELD_INFO = "CombiType"              : INT32  - IS_DATA   // Номер буквы в комбинации
          #DATA_FIELD_INFO = "IDType"                 : INT32  - IS_DATA   // Тип морфообразования полученной комбинации

          #DATA_FIELD_INFO = "NumOfMembers"           : INT32  - IS_DATA   // Число членов комбинации
          #DATA_FIELD_INFO = "IDSource0"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm0"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource1"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm1"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource2"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm2"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource3"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm3"                : INT32  - IS_DATA   // Номер окончания в IDType
          #DATA_FIELD_INFO = "IDSource4"              : INT32              // Индекс основы и DictionaryNumber (в старшем байте)
          #DATA_FIELD_INFO = "IDForm4"                : INT32  - IS_DATA   // Номер окончания в IDType

      #END_DATA_TABLE

      // Таблица комбинаторных синонимов 
      #DATA_TABLE_NAME = "CombiSynonyms" : START_SIZE(10000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDSource"           : INT32             // Индекс основы
          #DATA_FIELD_INFO = "DictionaryNumber"   : INT32 - NO_FIND   // Номер словаря
          #DATA_FIELD_INFO = "IDClass"      : INT32             // Индекс синонимического класса
          
      #END_DATA_TABLE

      // Таблица Дерева семантических классов      
      #DATA_TABLE_NAME = "SemanticIDSourceTree" : START_SIZE(18000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "DictionaryNumberParent"   : INT32 - NO_FIND   // Индекс словаря родителя
          #DATA_FIELD_INFO = "IDSourceParent"           : INT32             // Индекс основы родителя
          #DATA_FIELD_INFO = "DictionaryNumberChild"    : INT32 - NO_FIND   // Индекс словаря ребенка
          #DATA_FIELD_INFO = "IDSourceChild"            : INT32             // Индекс основы ребенка
          
      #END_DATA_TABLE

      // Таблица Дерева семантических классов      
      #DATA_TABLE_NAME = "SemanticClassesTree" : START_SIZE(30000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDClass"     : INT32    // Индекс семантического класса
          #DATA_FIELD_INFO = "IDParent"    : INT32    // Индекс семантического класса, который является отцом текущего
          #DATA_FIELD_INFO = "Name"        : WSTRING  // Имя семантического класса
          #DATA_FIELD_INFO = "ShortName"   : WSTRING  // Короткое имя класса
          #DATA_FIELD_INFO = "Color"       : UINT32   // Цвет отображения
          
      #END_DATA_TABLE

      // Таблица связывающая основы слов и семантические классы
      #DATA_TABLE_NAME = "SemanticClassesWords" : START_SIZE(50000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDSource"           : INT32              // Индекс основы
          #DATA_FIELD_INFO = "IDClass"            : INT32              // Индекс семантического класса
          
      #END_DATA_TABLE

      // Таблица синонимов 
      #DATA_TABLE_NAME = "SemanticsSynonims" : START_SIZE(50000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDSource"           : INT32             // Индекс основы
          #DATA_FIELD_INFO = "DictionaryNumber"   : INT32 - NO_FIND   // Номер словаря
          #DATA_FIELD_INFO = "IDClass"            : INT32             // Индекс семантического класса
          
      #END_DATA_TABLE

      // Таблица семантики слов      
      #DATA_TABLE_NAME = "Semantics" : START_SIZE(100000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDSource"           : INT32             // Индекс основы
          #DATA_FIELD_INFO = "DictionaryNumber"   : INT32 - NO_FIND   // Номер словаря
          #DATA_FIELD_INFO = "IDClass"            : INT32             // Индекс семантического класса
          
      #END_DATA_TABLE

      // Таблица семантики слов (дополнительная)      
      #DATA_TABLE_NAME = "SemanticsExtra" : START_SIZE(50000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "IDSource"           : INT32              // Индекс основы
          #DATA_FIELD_INFO = "DictionaryNumber"   : INT32  - NO_FIND   // Номер словаря
          #DATA_FIELD_INFO = "IDClass"            : INT32              // Индекс семантического класса
          
      #END_DATA_TABLE
      
      // Таблица комбинаций слов      
      #DATA_TABLE_NAME = "Syntax" : START_SIZE(18000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "DictionaryNumber"   : INT32 - NO_FIND   // Номер словаря
          #DATA_FIELD_INFO = "IDSource"           : INT32             // Индекс основы, который включает индекс корня и суффикса - битовая структура
          #DATA_FIELD_INFO = "SyntaxInfo"         : INT32 - NO_FIND   // Синтаксическая информация
          
      #END_DATA_TABLE
 
   #END_DATA_BASE  


   #DATA_BASE_NAME = "DownloadInfo"

      #DATA_TABLE_NAME = "DownloadInfo" : START_SIZE(10000), GROW_EVEN  

          #DATA_FIELD_INFO = "FilePath"            : STRING          
          #DATA_FIELD_INFO = "RequestURL"          : STRING
          #DATA_FIELD_INFO = "RequestURLLower"     : STRING - IS_UNIC
          #DATA_FIELD_INFO = "ResponseURL"         : STRING
          #DATA_FIELD_INFO = "ResponseURLLower"    : STRING - IS_UNIC
          #DATA_FIELD_INFO = "ContentSize"         : STRING
          #DATA_FIELD_INFO = "ContentData"         : STRING

      #END_DATA_TABLE

   #END_DATA_BASE  


   #DATA_BASE_NAME = "AbbreviationEnglish" 

      /////////////////////////////////////////
      
//      // Таблица простых сокращений
//      #DATA_TABLE_NAME = "SingleAbbreviations" : START_SIZE(18000), GROW_DOWN  
//      
//          #DATA_FIELD_INFO = "IDSource"        : INT32    // Индекс основы
//          #DATA_FIELD_INFO = "Form"            : STRING   // Форма
//          #DATA_FIELD_INFO = "IDForm"          : INT32    // Индекс формы
//          #DATA_FIELD_INFO = "PartOfSpeech"    : INT32    // Часть речи
//          #DATA_FIELD_INFO = "MorphoInfo"      : INT32    // Форма
//          #DATA_FIELD_INFO = "FormPrefix"      : STRING   // Первые 2 буквы формы 
//          #DATA_FIELD_INFO = "DictNumber"      : INT32    // Номер словаря           
//          
//      #END_DATA_TABLE
//
//      // Таблица сложных сокращений
//      #DATA_TABLE_NAME = "MultipleAbbreviations" : START_SIZE(18000), GROW_DOWN  
//      
//          #DATA_FIELD_INFO = "IDSource"        : INT32    // Индекс основы
//          #DATA_FIELD_INFO = "Form"            : STRING   // Форма
//          #DATA_FIELD_INFO = "IDForm"          : INT32    // Индекс формы
//          #DATA_FIELD_INFO = "PartOfSpeech"    : INT32    // Часть речи
//          #DATA_FIELD_INFO = "MorphoInfo"      : INT32    // Форма
//          #DATA_FIELD_INFO = "FormPrefix"      : STRING   // Первые 2 буквы формы          
//          #DATA_FIELD_INFO = "DictNumber"      : INT32    // Номер словаря
//          #DATA_FIELD_INFO = "SemanticType"    : INT32    // Семантический тип               
//
//      #END_DATA_TABLE

      // Таблица простых сокращений
      #DATA_TABLE_NAME = "NominalSingleAbbreviations" : START_SIZE(18000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "DictionaryIndex" : INT32              // Номер словаря и индекс основы/слова
          #DATA_FIELD_INFO = "FormLower"       : WSTRING            // Литеральная фрма в нижнем регистре
          #DATA_FIELD_INFO = "Form"            : WSTRING - NO_FIND  // Литеральная форма
          #DATA_FIELD_INFO = "IDType"          : INT32   - IS_DATA  // Ссылка на морфо-тип
          #DATA_FIELD_INFO = "IDForm"          : INT32   - IS_DATA  // Номер морфо-формы
          
      #END_DATA_TABLE


      // Таблица простых сокращений
      #DATA_TABLE_NAME = "ProperSingleAbbreviations" : START_SIZE(18000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "DictionaryIndex" : INT32              // Номер словаря и индекс основы/слова
          #DATA_FIELD_INFO = "FormLower"       : WSTRING            // Литеральная фрма в нижнем регистре
          #DATA_FIELD_INFO = "Form"            : WSTRING - NO_FIND  // Литеральная форма
          #DATA_FIELD_INFO = "IDType"          : INT32   - IS_DATA  // Ссылка на морфо-тип
          #DATA_FIELD_INFO = "IDForm"          : INT32   - IS_DATA  // Номер морфо-формы
          
      #END_DATA_TABLE
      
      // Таблица простых сокращений
      #DATA_TABLE_NAME = "CombinatorySingleAbbreviations" : START_SIZE(18000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "DictionaryIndex" : INT32              // Номер словаря и индекс основы/слова
          #DATA_FIELD_INFO = "FormLower"       : WSTRING            // Литеральная фрма в нижнем регистре
          #DATA_FIELD_INFO = "Form"            : WSTRING - NO_FIND  // Литеральная форма
          #DATA_FIELD_INFO = "IDType"          : INT32   - IS_DATA  // Ссылка на морфо-тип
          #DATA_FIELD_INFO = "IDForm"          : INT32   - IS_DATA  // Номер морфо-формы
          
      #END_DATA_TABLE

      // Таблица сложных сокращений
      #DATA_TABLE_NAME = "MultipleAbbreviations" : START_SIZE(18000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "DictionaryIndex" : INT32              // Номер словаря и индекс основы/слова
          #DATA_FIELD_INFO = "FormLower"       : WSTRING            // Литеральная фрма в нижнем регистре
          #DATA_FIELD_INFO = "Form"            : WSTRING - NO_FIND  // Литеральная форма
          #DATA_FIELD_INFO = "IDType"          : INT32   - IS_DATA  // Ссылка на морфо-тип
          #DATA_FIELD_INFO = "IDForm"          : INT32   - IS_DATA  // Номер морфо-формы

      #END_DATA_TABLE
       
   #END_DATA_BASE  

   #DATA_BASE_NAME = "AbbreviationRussian" 

      /////////////////////////////////////////
      
//      // Таблица простых сокращений
//      #DATA_TABLE_NAME = "SingleAbbreviations" : START_SIZE(18000), GROW_DOWN  
//      
//          #DATA_FIELD_INFO = "IDSource"        : INT32    // Индекс основы
//          #DATA_FIELD_INFO = "Form"            : STRING   // Форма
//          #DATA_FIELD_INFO = "IDForm"          : INT32    // Индекс формы
//          #DATA_FIELD_INFO = "PartOfSpeech"    : INT32    // Часть речи
//          #DATA_FIELD_INFO = "MorphoInfo"      : INT32    // Форма
//          #DATA_FIELD_INFO = "FormPrefix"      : STRING   // Первые 2 буквы формы 
//          #DATA_FIELD_INFO = "DictNumber"      : INT32    // Номер словаря           
//          
//      #END_DATA_TABLE
//
//      // Таблица сложных сокращений
//      #DATA_TABLE_NAME = "MultipleAbbreviations" : START_SIZE(18000), GROW_DOWN  
//      
//          #DATA_FIELD_INFO = "IDSource"        : INT32            // Индекс основы
//          #DATA_FIELD_INFO = "Form"            : STRING           // Форма
//          #DATA_FIELD_INFO = "IDForm"          : INT32            // Индекс формы
//          #DATA_FIELD_INFO = "PartOfSpeech"    : INT32            // Часть речи
//          #DATA_FIELD_INFO = "MorphoInfo"      : INT32            // Форма
//          #DATA_FIELD_INFO = "FormPrefix"      : STRING           // Первые 2 буквы формы          
//          #DATA_FIELD_INFO = "DictNumber"      : INT32            // Номер словаря
//          #DATA_FIELD_INFO = "SemanticType"    : INT32            // Семантический тип               
//
//      #END_DATA_TABLE
     
      // Таблица простых сокращений
      #DATA_TABLE_NAME = "NominalSingleAbbreviations" : START_SIZE(18000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "DictionaryIndex" : INT32              // Номер словаря и индекс основы/слова
          #DATA_FIELD_INFO = "FormLower"       : WSTRING            // Литеральная фрма в нижнем регистре
          #DATA_FIELD_INFO = "Form"            : WSTRING - NO_FIND  // Литеральная форма
          #DATA_FIELD_INFO = "IDType"          : INT32   - IS_DATA  // Ссылка на морфо-тип
          #DATA_FIELD_INFO = "IDForm"          : INT32   - IS_DATA  // Номер морфо-формы
          
      #END_DATA_TABLE

      // Таблица простых сокращений
      #DATA_TABLE_NAME = "ProperSingleAbbreviations" : START_SIZE(18000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "DictionaryIndex" : INT32              // Номер словаря и индекс основы/слова
          #DATA_FIELD_INFO = "FormLower"       : WSTRING            // Литеральная фрма в нижнем регистре
          #DATA_FIELD_INFO = "Form"            : WSTRING - NO_FIND  // Литеральная форма
          #DATA_FIELD_INFO = "IDType"          : INT32   - IS_DATA  // Ссылка на морфо-тип
          #DATA_FIELD_INFO = "IDForm"          : INT32   - IS_DATA  // Номер морфо-формы
          
      #END_DATA_TABLE
      
      // Таблица простых сокращений
      #DATA_TABLE_NAME = "CombinatorySingleAbbreviations" : START_SIZE(18000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "DictionaryIndex" : INT32              // Номер словаря и индекс основы/слова
          #DATA_FIELD_INFO = "FormLower"       : WSTRING            // Литеральная фрма в нижнем регистре
          #DATA_FIELD_INFO = "Form"            : WSTRING - NO_FIND  // Литеральная форма
          #DATA_FIELD_INFO = "IDType"          : INT32   - IS_DATA  // Ссылка на морфо-тип
          #DATA_FIELD_INFO = "IDForm"          : INT32   - IS_DATA  // Номер морфо-формы
          
      #END_DATA_TABLE


      // Таблица сложных сокращений
      #DATA_TABLE_NAME = "MultipleAbbreviations" : START_SIZE(18000), GROW_DOWN  
      
          #DATA_FIELD_INFO = "DictionaryIndex" : INT32              // Номер словаря и индекс основы/слова
          #DATA_FIELD_INFO = "FormLower"       : WSTRING            // Литеральная фрма в нижнем регистре
          #DATA_FIELD_INFO = "Form"            : WSTRING - NO_FIND  // Литеральная форма
          #DATA_FIELD_INFO = "IDType"          : INT32   - IS_DATA  // Ссылка на морфо-тип
          #DATA_FIELD_INFO = "IDForm"          : INT32   - IS_DATA  // Номер морфо-формы

      #END_DATA_TABLE
       
   #END_DATA_BASE  

    #DATA_BASE_NAME = "SyntaxConstructionsEnglish" 

      /////////////////////////////////////////
      
      // Таблица синтаксических конструкций
      #DATA_TABLE_NAME = "SyntaxConstruction" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "ID"	  		: INT32  		// Индекс конструкции
          #DATA_FIELD_INFO = "Name"			: WSTRING		// название конструкции
	  #DATA_FIELD_INFO = "DetectWordGroupName"	: WSTRING - IS_DATA	// название группы слов для детектирования
	  #DATA_FIELD_INFO = "Data"			: VECTOR - IS_DATA	// данные
	  #DATA_FIELD_INFO = "DataSize"			: INT32	 - IS_DATA	// размер данных
	  #DATA_FIELD_INFO = "Level"			: INT32	 - IS_DATA	// номер элемента конструкции
          
      #END_DATA_TABLE

      // Таблица слов для детектирования     
      #DATA_TABLE_NAME = "DetectWordsGroups" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "DetectWordsGroupName"	  	: WSTRING  		// имя группы для детектирования
          #DATA_FIELD_INFO = "DetectWord"			: WSTRING		// имя детект слова
          
      #END_DATA_TABLE

      // Таблица слов для детектирования      
      #DATA_TABLE_NAME = "SyntaxConstructionGroups" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "IDConstruction"	  	: INT32  		// индекс конструкции
          #DATA_FIELD_INFO = "IDGroup"			: INT32			// индекс группы
          
      #END_DATA_TABLE

      // Таблица групп синтаксических конструкций, тип разбора и отношение к омонимии      
      #DATA_TABLE_NAME = "SyntaxConstructionGroupsType" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "IDGroup"			: INT32			// индекс группы
	  #DATA_FIELD_INFO = "AnalyseMode"		: INT32			// тип разбора
	  #DATA_FIELD_INFO = "ResolveAmbiguity"		: INT32			// является ли группой разрешения омонимии
          
      #END_DATA_TABLE

        
   #END_DATA_BASE  


 #DATA_BASE_NAME = "SemanticConstructionsEnglish" 

      /////////////////////////////////////////
      
      // Таблица синтаксических конструкций
      #DATA_TABLE_NAME = "SyntaxConstruction" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "ID"	  		: INT32  		// Индекс конструкции
          #DATA_FIELD_INFO = "Name"			: WSTRING		// название конструкции
	  #DATA_FIELD_INFO = "DetectWordGroupName"	: WSTRING - IS_DATA	// название группы слов для детектирования
	  #DATA_FIELD_INFO = "Data"			: VECTOR - IS_DATA	// данные
	  #DATA_FIELD_INFO = "DataSize"			: INT32	 - IS_DATA	// размер данных
	  #DATA_FIELD_INFO = "Level"			: INT32	 - IS_DATA	// номер элемента конструкции
          
      #END_DATA_TABLE

      // Таблица слов для детектирования     
      #DATA_TABLE_NAME = "DetectWordsGroups" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "DetectWordsGroupName"	  	: WSTRING  		// имя группы для детектирования
          #DATA_FIELD_INFO = "DetectWord"			: WSTRING		// имя детект слова
          
      #END_DATA_TABLE

      // Таблица слов для детектирования      
      #DATA_TABLE_NAME = "SyntaxConstructionGroups" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "IDConstruction"	  	: INT32  		// индекс конструкции
          #DATA_FIELD_INFO = "IDGroup"			: INT32			// индекс группы
          
      #END_DATA_TABLE

      // Таблица групп синтаксических конструкций, тип разбора и отношение к омонимии      
      #DATA_TABLE_NAME = "SyntaxConstructionGroupsType" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "IDGroup"			: INT32			// индекс группы
	  #DATA_FIELD_INFO = "AnalyseMode"		: INT32			// тип разбора
	  #DATA_FIELD_INFO = "ResolveAmbiguity"		: INT32			// является ли группой разрешения омонимии
          
      #END_DATA_TABLE

        
   #END_DATA_BASE  


   #DATA_BASE_NAME = "SyntaxConstructionsRussian" 

      /////////////////////////////////////////
      
      // Таблица синтаксических конструкций
      #DATA_TABLE_NAME = "SyntaxConstruction" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "ID"	  		: INT32  		// Индекс конструкции
          #DATA_FIELD_INFO = "Name"			: WSTRING		// название конструкции
	  #DATA_FIELD_INFO = "DetectWordGroupName"	: WSTRING - IS_DATA	// название группы слов для детектирования
	  #DATA_FIELD_INFO = "Data"			: VECTOR - IS_DATA	// данные
	  #DATA_FIELD_INFO = "DataSize"			: INT32	 - IS_DATA	// размер данных
	  #DATA_FIELD_INFO = "Level"			: INT32	 - IS_DATA	// номер элемента конструкции
          
      #END_DATA_TABLE

      // Таблица слов для детектирования     
	#DATA_TABLE_NAME = "DetectWordsGroups" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "DetectWordsGroupName"	  	: WSTRING  		// имя группы для детектирования
          #DATA_FIELD_INFO = "DetectWord"			: WSTRING		// имя детект слова
          
      #END_DATA_TABLE

      // Таблица слов для детектирования      
	#DATA_TABLE_NAME = "SyntaxConstructionGroups" : START_SIZE(18000), GROW_DOWN
   
          #DATA_FIELD_INFO = "IDConstruction"	  	: INT32  		// индекс конструкции
          #DATA_FIELD_INFO = "IDGroup"			: INT32			// индекс группы
          
      #END_DATA_TABLE

      // Таблица групп синтаксических конструкций, тип разбора и отношение к омонимии      
	#DATA_TABLE_NAME = "SyntaxConstructionGroupsType" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "IDGroup"			: INT32			// индекс группы
	  #DATA_FIELD_INFO = "AnalyseMode"		: INT32			// тип разбора
	  #DATA_FIELD_INFO = "ResolveAmbiguity"		: INT32			// является ли группой разрешения омонимии
          
      #END_DATA_TABLE

        
   #END_DATA_BASE  


 #DATA_BASE_NAME = "SyntaxConstructionsRussian_NaturalQuery" 

      /////////////////////////////////////////
      
      // Таблица синтаксических конструкций
      #DATA_TABLE_NAME = "SyntaxConstruction" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "ID"	  		: INT32  		// Индекс конструкции
          #DATA_FIELD_INFO = "Name"			: WSTRING		// название конструкции
	  #DATA_FIELD_INFO = "DetectWordGroupName"	: WSTRING - IS_DATA	// название группы слов для детектирования
	  #DATA_FIELD_INFO = "Data"			: VECTOR - IS_DATA	// данные
	  #DATA_FIELD_INFO = "DataSize"			: INT32	 - IS_DATA	// размер данных
	  #DATA_FIELD_INFO = "Level"			: INT32	 - IS_DATA	// номер элемента конструкции
          
      #END_DATA_TABLE

      // Таблица слов для детектирования     
	#DATA_TABLE_NAME = "DetectWordsGroups" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "DetectWordsGroupName"	  	: WSTRING  		// имя группы для детектирования
          #DATA_FIELD_INFO = "DetectWord"			: WSTRING		// имя детект слова
          
      #END_DATA_TABLE

      // Таблица слов для детектирования      
	#DATA_TABLE_NAME = "SyntaxConstructionGroups" : START_SIZE(18000), GROW_DOWN
   
          #DATA_FIELD_INFO = "IDConstruction"	  	: INT32  		// индекс конструкции
          #DATA_FIELD_INFO = "IDGroup"			: INT32			// индекс группы
          
      #END_DATA_TABLE

      // Таблица групп синтаксических конструкций, тип разбора и отношение к омонимии      
	#DATA_TABLE_NAME = "SyntaxConstructionGroupsType" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "IDGroup"			: INT32			// индекс группы
	  #DATA_FIELD_INFO = "AnalyseMode"		: INT32			// тип разбора
	  #DATA_FIELD_INFO = "ResolveAmbiguity"		: INT32			// является ли группой разрешения омонимии
          
      #END_DATA_TABLE

        
   #END_DATA_BASE  


 #DATA_BASE_NAME = "SemanticConstructionsRussian" 

      /////////////////////////////////////////
      
      // Таблица синтаксических конструкций
      #DATA_TABLE_NAME = "SyntaxConstruction" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "ID"	  		: INT32  		// Индекс конструкции
          #DATA_FIELD_INFO = "Name"			: WSTRING		// название конструкции
	  #DATA_FIELD_INFO = "DetectWordGroupName"	: WSTRING - IS_DATA	// название группы слов для детектирования
	  #DATA_FIELD_INFO = "Data"			: VECTOR - IS_DATA	// данные
	  #DATA_FIELD_INFO = "DataSize"			: INT32	 - IS_DATA	// размер данных
	  #DATA_FIELD_INFO = "Level"			: INT32	 - IS_DATA	// номер элемента конструкции
          
      #END_DATA_TABLE

      // Таблица слов для детектирования     
	#DATA_TABLE_NAME = "DetectWordsGroups" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "DetectWordsGroupName"	  	: WSTRING  		// имя группы для детектирования
          #DATA_FIELD_INFO = "DetectWord"			: WSTRING		// имя детект слова
          
      #END_DATA_TABLE

      // Таблица слов для детектирования      
	#DATA_TABLE_NAME = "SyntaxConstructionGroups" : START_SIZE(18000), GROW_DOWN
   
          #DATA_FIELD_INFO = "IDConstruction"	  	: INT32  		// индекс конструкции
          #DATA_FIELD_INFO = "IDGroup"			: INT32			// индекс группы
          
      #END_DATA_TABLE

      // Таблица групп синтаксических конструкций, тип разбора и отношение к омонимии      
	#DATA_TABLE_NAME = "SyntaxConstructionGroupsType" : START_SIZE(18000), GROW_DOWN  
   
          #DATA_FIELD_INFO = "IDGroup"			: INT32			// индекс группы
	  #DATA_FIELD_INFO = "AnalyseMode"		: INT32			// тип разбора
	  #DATA_FIELD_INFO = "ResolveAmbiguity"		: INT32			// является ли группой разрешения омонимии
          
      #END_DATA_TABLE

        
   #END_DATA_BASE  

 

#END_DBMS

